import type { Role } from '@prisma/client';

export type SeedArtist = {
  nickname: string;
  city: string;
  country: string;
  countryCode?: string | null;
  address: string;
  description: string;
  styles: string[];
  instagram: string;
  avatar: string;
  beginner?: boolean;
  color?: boolean;
  blackAndGray?: boolean;
  photos?: string[];
  lat?: number | null;
  lon?: number | null;
  // New location fields
  regionName?: string | null;
  regionCode?: string | null;
  regionCodeFull?: string | null;
  postcode?: string | null;
  streetName?: string | null;
  addressNumber?: string | null;
  routableLat?: number | null;
  routableLon?: number | null;
  geoRaw?: any;
};

export type SeedUser = {
  id?: string;
  email: string;
  googleId: string;
  name?: string | null;
  avatar?: string | null;
  role?: Role;
  artist: SeedArtist;
};

const names = [
  'Eva Noir',
  'Leo Ink',
  'Mila Shade',
  'Noah Veld',
  'Luna Stark',
  'Finn Blauw',
  'Iris Nova',
  'Max Raven',
  'Nora Flint',
  'Zoe Vale',
  'Alex Stone',
  'Bella Moon',
  'Casper Ink',
  'Diana Rose',
  'Erik Steel',
  'Freya Wolf',
  'Gunnar Frost',
  'Hilda Storm',
  'Ivan Dark',
  'Jade Light',
  'Kai Shadow',
  'Lara Fire',
  'Mason River',
  'Nina Star',
  'Oscar Wind',
  'Pia Ocean',
  'Quinn Forest',
  'Ruby Sky',
  'Sage Mountain',
  'Tara Dawn',
  'Ulrich Night',
  'Vera Sun',
  'Wade Earth',
  'Xara Moon',
  'Yuki Snow',
  'Zara Rain',
  'Aria Flame',
  'Blake Storm',
  'Cora Mist',
  'Dexter Wave',
  'Elena Tide',
  'Felix Rock',
  'Gia Cloud',
  'Hugo Star',
  'Ivy Leaf',
  'Jasper Stone',
  'Kira Wind',
  'Liam Fire',
  'Maya Earth',
  'Nico Sky',
  'Olive Rain',
  'Phoenix Sun',
  'Quinn Moon',
  'Raven Night',
  'Sage Dawn',
  'Titan Storm',
  'Uma Star',
  'Viktor Fire',
  'Willow Mist',
  'Xander Wave',
  'Yara Light',
  'Zane Dark',
  'Aurora Flame',
  'Blaze Storm',
  'Crystal Ice',
  'Drake Fire',
  'Ember Moon',
  'Frost Star',
  'Glacier Wind',
  'Haven Rain',
  'Iris Dawn',
  'Jupiter Sun',
  'Koda Moon',
  'Luna Star',
  'Mars Fire',
  'Nova Light',
  'Orion Dark',
  'Polaris Sky',
  'Quasar Storm',
  'Rigel Wave',
  'Sirius Sun',
  'Titan Moon',
  'Ursa Star',
  'Vega Light',
  'Wolf Storm',
  'Xena Fire',
  'Yara Moon',
  'Zeus Star',
  'Alpha Dawn',
  'Beta Night',
  'Gamma Sun',
  'Delta Moon',
  'Epsilon Star',
  'Zeta Light',
  'Eta Storm',
  'Theta Fire',
  'Iota Moon',
  'Kappa Star',
  'Lambda Dawn',
  'Mu Night',
];

const nicknames = [
  'eva.noir',
  'leo.ink',
  'mila.shade',
  'noah.veld',
  'luna.stark',
  'finn.blauw',
  'iris.nova',
  'max.raven',
  'nora.flint',
  'zoe.vale',
  'alex.stone',
  'bella.moon',
  'casper.ink',
  'diana.rose',
  'erik.steel',
  'freya.wolf',
  'gunnar.frost',
  'hilda.storm',
  'ivan.dark',
  'jade.light',
  'kai.shadow',
  'lara.fire',
  'mason.river',
  'nina.star',
  'oscar.wind',
  'pia.ocean',
  'quinn.forest',
  'ruby.sky',
  'sage.mountain',
  'tara.dawn',
  'ulrich.night',
  'vera.sun',
  'wade.earth',
  'xara.moon',
  'yuki.snow',
  'zara.rain',
  'aria.flame',
  'blake.storm',
  'cora.mist',
  'dexter.wave',
  'elena.tide',
  'felix.rock',
  'gia.cloud',
  'hugo.star',
  'ivy.leaf',
  'jasper.stone',
  'kira.wind',
  'liam.fire',
  'maya.earth',
  'nico.sky',
  'olive.rain',
  'phoenix.sun',
  'quinn.moon',
  'raven.night',
  'sage.dawn',
  'titan.storm',
  'uma.star',
  'viktor.fire',
  'willow.mist',
  'xander.wave',
  'yara.light',
  'zane.dark',
  'aurora.flame',
  'blaze.storm',
  'crystal.ice',
  'drake.fire',
  'ember.moon',
  'frost.star',
  'glacier.wind',
  'haven.rain',
  'iris.dawn',
  'jupiter.sun',
  'koda.moon',
  'luna.star',
  'mars.fire',
  'nova.light',
  'orion.dark',
  'polaris.sky',
  'quasar.storm',
  'rigel.wave',
  'sirius.sun',
  'titan.moon',
  'ursa.star',
  'vega.light',
  'wolf.storm',
  'xena.fire',
  'yara.moon',
  'zeus.star',
  'alpha.dawn',
  'beta.night',
  'gamma.sun',
  'delta.moon',
  'epsilon.star',
  'zeta.light',
  'eta.storm',
  'theta.fire',
  'iota.moon',
  'kappa.star',
  'lambda.dawn',
  'mu.night',
];

// European cities with coordinates and additional location data
const europeanLocations = [
  // Netherlands
  {
    city: 'Amsterdam',
    country: 'Netherlands',
    countryCode: 'NL',
    regionName: 'North Holland',
    regionCode: 'NH',
    regionCodeFull: 'NL-NH',
    lat: 52.3676,
    lon: 4.9041,
    postcode: '1012',
    streetNames: [
      'Damstraat',
      'Kalverstraat',
      'Nieuwendijk',
      'Rokin',
      'Spuistraat',
    ],
  },
  {
    city: 'Rotterdam',
    country: 'Netherlands',
    countryCode: 'NL',
    regionName: 'South Holland',
    regionCode: 'ZH',
    regionCodeFull: 'NL-ZH',
    lat: 51.9244,
    lon: 4.4777,
    postcode: '3011',
    streetNames: [
      'Nieuwe Binnenweg',
      'Witte de Withstraat',
      'Coolsingel',
      'Lijnbaan',
      'Oude Binnenweg',
    ],
  },
  {
    city: 'Utrecht',
    country: 'Netherlands',
    countryCode: 'NL',
    regionName: 'Utrecht',
    regionCode: 'UT',
    regionCodeFull: 'NL-UT',
    lat: 52.0907,
    lon: 5.1214,
    postcode: '3512',
    streetNames: [
      'Oudegracht',
      'Neude',
      'Vredenburg',
      'Domplein',
      'Lange Viestraat',
    ],
  },
  {
    city: 'The Hague',
    country: 'Netherlands',
    countryCode: 'NL',
    regionName: 'South Holland',
    regionCode: 'ZH',
    regionCodeFull: 'NL-ZH',
    lat: 52.0705,
    lon: 4.3007,
    postcode: '2511',
    streetNames: [
      'Grote Markt',
      'Plein',
      'Lange Voorhout',
      'Noordeinde',
      'Spuistraat',
    ],
  },
  {
    city: 'Eindhoven',
    country: 'Netherlands',
    countryCode: 'NL',
    regionName: 'North Brabant',
    regionCode: 'NB',
    regionCodeFull: 'NL-NB',
    lat: 51.4416,
    lon: 5.4697,
    postcode: '5611',
    streetNames: [
      'Stratumseind',
      'Markt',
      'Demer',
      'Rechtestraat',
      'Kleine Berg',
    ],
  },

  // Germany
  {
    city: 'Berlin',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'Berlin',
    regionCode: 'BE',
    regionCodeFull: 'DE-BE',
    lat: 52.52,
    lon: 13.405,
    postcode: '10115',
    streetNames: [
      'Unter den Linden',
      'Friedrichstraße',
      'Potsdamer Platz',
      'Alexanderplatz',
      'Kurfürstendamm',
    ],
  },
  {
    city: 'Munich',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'Bavaria',
    regionCode: 'BY',
    regionCodeFull: 'DE-BY',
    lat: 48.1351,
    lon: 11.582,
    postcode: '80331',
    streetNames: [
      'Marienplatz',
      'Maximilianstraße',
      'Sendlinger Straße',
      'Kaufingerstraße',
      'Neuhauser Straße',
    ],
  },
  {
    city: 'Hamburg',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'Hamburg',
    regionCode: 'HH',
    regionCodeFull: 'DE-HH',
    lat: 53.5511,
    lon: 9.9937,
    postcode: '20095',
    streetNames: [
      'Mönckebergstraße',
      'Spitalerstraße',
      'Neuer Wall',
      'Jungfernstieg',
      'Reeperbahn',
    ],
  },
  {
    city: 'Cologne',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'North Rhine-Westphalia',
    regionCode: 'NW',
    regionCodeFull: 'DE-NW',
    lat: 50.9375,
    lon: 6.9603,
    postcode: '50667',
    streetNames: [
      'Hohe Straße',
      'Schildergasse',
      'Domplatz',
      'Neumarkt',
      'Ehrenstraße',
    ],
  },
  {
    city: 'Frankfurt',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'Hesse',
    regionCode: 'HE',
    regionCodeFull: 'DE-HE',
    lat: 50.1109,
    lon: 8.6821,
    postcode: '60311',
    streetNames: [
      'Zeil',
      'Goethestraße',
      'Freßgass',
      'Hauptwache',
      'Konstablerwache',
    ],
  },
  {
    city: 'Düsseldorf',
    country: 'Germany',
    countryCode: 'DE',
    regionName: 'North Rhine-Westphalia',
    regionCode: 'NW',
    regionCodeFull: 'DE-NW',
    lat: 51.2277,
    lon: 6.7735,
    postcode: '40213',
    streetNames: [
      'Königsallee',
      'Bolkerstraße',
      'Flinger Straße',
      'Schadowstraße',
      'Immermannstraße',
    ],
  },

  // France
  {
    city: 'Paris',
    country: 'France',
    countryCode: 'FR',
    regionName: 'Île-de-France',
    regionCode: 'IDF',
    regionCodeFull: 'FR-IDF',
    lat: 48.8566,
    lon: 2.3522,
    postcode: '75001',
    streetNames: [
      'Champs-Élysées',
      'Rue de Rivoli',
      'Boulevard Saint-Germain',
      'Rue de la Paix',
      'Avenue Montaigne',
    ],
  },
  {
    city: 'Lyon',
    country: 'France',
    countryCode: 'FR',
    regionName: 'Auvergne-Rhône-Alpes',
    regionCode: 'ARA',
    regionCodeFull: 'FR-ARA',
    lat: 45.764,
    lon: 4.8357,
    postcode: '69001',
    streetNames: [
      'Rue de la République',
      'Place Bellecour',
      'Rue Victor Hugo',
      'Cours Franklin Roosevelt',
      'Rue du Président Édouard Herriot',
    ],
  },
  {
    city: 'Marseille',
    country: 'France',
    countryCode: 'FR',
    regionName: "Provence-Alpes-Côte d'Azur",
    regionCode: 'PACA',
    regionCodeFull: 'FR-PACA',
    lat: 43.2965,
    lon: 5.3698,
    postcode: '13001',
    streetNames: [
      'La Canebière',
      'Rue Paradis',
      'Rue Saint-Ferréol',
      'Cours Julien',
      'Rue de la République',
    ],
  },
  {
    city: 'Toulouse',
    country: 'France',
    countryCode: 'FR',
    regionName: 'Occitanie',
    regionCode: 'OCC',
    regionCodeFull: 'FR-OCC',
    lat: 43.6047,
    lon: 1.4442,
    postcode: '31000',
    streetNames: [
      "Rue d'Alsace-Lorraine",
      'Place du Capitole',
      'Rue Saint-Rome',
      'Rue de Metz',
      'Allées Jean Jaurès',
    ],
  },
  {
    city: 'Nice',
    country: 'France',
    countryCode: 'FR',
    regionName: "Provence-Alpes-Côte d'Azur",
    regionCode: 'PACA',
    regionCodeFull: 'FR-PACA',
    lat: 43.7102,
    lon: 7.262,
    postcode: '06000',
    streetNames: [
      'Promenade des Anglais',
      'Rue de France',
      'Avenue Jean Médecin',
      'Rue Masséna',
      'Cours Saleya',
    ],
  },

  // Spain
  {
    city: 'Madrid',
    country: 'Spain',
    countryCode: 'ES',
    regionName: 'Community of Madrid',
    regionCode: 'MD',
    regionCodeFull: 'ES-MD',
    lat: 40.4168,
    lon: -3.7038,
    postcode: '28001',
    streetNames: [
      'Gran Vía',
      'Calle de Alcalá',
      'Paseo de la Castellana',
      'Calle de Serrano',
      'Calle Mayor',
    ],
  },
  {
    city: 'Barcelona',
    country: 'Spain',
    countryCode: 'ES',
    regionName: 'Catalonia',
    regionCode: 'CT',
    regionCodeFull: 'ES-CT',
    lat: 41.3851,
    lon: 2.1734,
    postcode: '08001',
    streetNames: [
      'Las Ramblas',
      'Passeig de Gràcia',
      'Carrer de la Portaferrissa',
      'Carrer del Pi',
      'Carrer de Ferran',
    ],
  },
  {
    city: 'Valencia',
    country: 'Spain',
    countryCode: 'ES',
    regionName: 'Valencian Community',
    regionCode: 'VC',
    regionCodeFull: 'ES-VC',
    lat: 39.4699,
    lon: -0.3763,
    postcode: '46001',
    streetNames: [
      'Calle de Colón',
      'Calle de Xàtiva',
      'Calle de la Paz',
      'Calle de San Vicente',
      'Calle de la Reina',
    ],
  },
  {
    city: 'Seville',
    country: 'Spain',
    countryCode: 'ES',
    regionName: 'Andalusia',
    regionCode: 'AN',
    regionCodeFull: 'ES-AN',
    lat: 37.3891,
    lon: -5.9845,
    postcode: '41001',
    streetNames: [
      'Calle Sierpes',
      'Calle Tetuán',
      'Calle Francos',
      'Calle Cuna',
      "Calle O'Donnell",
    ],
  },
  {
    city: 'Bilbao',
    country: 'Spain',
    countryCode: 'ES',
    regionName: 'Basque Country',
    regionCode: 'PV',
    regionCodeFull: 'ES-PV',
    lat: 43.2627,
    lon: -2.9253,
    postcode: '48001',
    streetNames: [
      'Gran Vía',
      'Calle de la Diputación',
      'Calle de Iparraguirre',
      'Calle de Ercilla',
      'Calle de Rodríguez Arias',
    ],
  },

  // Italy
  {
    city: 'Rome',
    country: 'Italy',
    countryCode: 'IT',
    regionName: 'Lazio',
    regionCode: 'LAZ',
    regionCodeFull: 'IT-LAZ',
    lat: 41.9028,
    lon: 12.4964,
    postcode: '00100',
    streetNames: [
      'Via del Corso',
      'Via Nazionale',
      'Via Condotti',
      'Via del Tritone',
      'Via Veneto',
    ],
  },
  {
    city: 'Milan',
    country: 'Italy',
    countryCode: 'IT',
    regionName: 'Lombardy',
    regionCode: 'LOM',
    regionCodeFull: 'IT-LOM',
    lat: 45.4642,
    lon: 9.19,
    postcode: '20100',
    streetNames: [
      'Via Montenapoleone',
      'Corso Buenos Aires',
      'Via Torino',
      'Via Brera',
      'Corso di Porta Ticinese',
    ],
  },
  {
    city: 'Naples',
    country: 'Italy',
    countryCode: 'IT',
    regionName: 'Campania',
    regionCode: 'CAM',
    regionCodeFull: 'IT-CAM',
    lat: 40.8518,
    lon: 14.2681,
    postcode: '80100',
    streetNames: [
      'Via Toledo',
      'Via Chiaia',
      'Via dei Tribunali',
      'Spaccanapoli',
      'Via San Gregorio Armeno',
    ],
  },
  {
    city: 'Florence',
    country: 'Italy',
    countryCode: 'IT',
    regionName: 'Tuscany',
    regionCode: 'TOS',
    regionCodeFull: 'IT-TOS',
    lat: 43.7696,
    lon: 11.2558,
    postcode: '50100',
    streetNames: [
      "Via de' Tornabuoni",
      'Via del Corso',
      'Via Roma',
      'Via Calzaiuoli',
      'Ponte Vecchio',
    ],
  },
  {
    city: 'Venice',
    country: 'Italy',
    countryCode: 'IT',
    regionName: 'Veneto',
    regionCode: 'VEN',
    regionCodeFull: 'IT-VEN',
    lat: 45.4408,
    lon: 12.3155,
    postcode: '30100',
    streetNames: [
      'Calle Larga San Marco',
      'Ruga degli Spezieri',
      'Calle dei Fabbri',
      'Salizada San Moisè',
      'Calle de la Mandola',
    ],
  },

  // United Kingdom
  {
    city: 'London',
    country: 'United Kingdom',
    countryCode: 'GB',
    regionName: 'England',
    regionCode: 'ENG',
    regionCodeFull: 'GB-ENG',
    lat: 51.5074,
    lon: -0.1278,
    postcode: 'SW1A 1AA',
    streetNames: [
      'Oxford Street',
      'Regent Street',
      'Bond Street',
      'Carnaby Street',
      "King's Road",
    ],
  },
  {
    city: 'Manchester',
    country: 'United Kingdom',
    countryCode: 'GB',
    regionName: 'England',
    regionCode: 'ENG',
    regionCodeFull: 'GB-ENG',
    lat: 53.4808,
    lon: -2.2426,
    postcode: 'M1 1AA',
    streetNames: [
      'Market Street',
      'Deansgate',
      'King Street',
      'Northern Quarter',
      'Spinningfields',
    ],
  },
  {
    city: 'Birmingham',
    country: 'United Kingdom',
    countryCode: 'GB',
    regionName: 'England',
    regionCode: 'ENG',
    regionCodeFull: 'GB-ENG',
    lat: 52.4862,
    lon: -1.8904,
    postcode: 'B1 1AA',
    streetNames: [
      'New Street',
      'Bull Street',
      'Corporation Street',
      'High Street',
      'Colmore Row',
    ],
  },
  {
    city: 'Edinburgh',
    country: 'United Kingdom',
    countryCode: 'GB',
    regionName: 'Scotland',
    regionCode: 'SCT',
    regionCodeFull: 'GB-SCT',
    lat: 55.9533,
    lon: -3.1883,
    postcode: 'EH1 1AA',
    streetNames: [
      'Princes Street',
      'Royal Mile',
      'George Street',
      'Rose Street',
      'Grassmarket',
    ],
  },
  {
    city: 'Glasgow',
    country: 'United Kingdom',
    countryCode: 'GB',
    regionName: 'Scotland',
    regionCode: 'SCT',
    regionCodeFull: 'GB-SCT',
    lat: 55.8642,
    lon: -4.2518,
    postcode: 'G1 1AA',
    streetNames: [
      'Buchanan Street',
      'Sauchiehall Street',
      'Argyle Street',
      'Merchant City',
      'West End',
    ],
  },

  // Poland
  {
    city: 'Warsaw',
    country: 'Poland',
    countryCode: 'PL',
    regionName: 'Masovian Voivodeship',
    regionCode: 'MZ',
    regionCodeFull: 'PL-MZ',
    lat: 52.2297,
    lon: 21.0122,
    postcode: '00-001',
    streetNames: [
      'Krakowskie Przedmieście',
      'Nowy Świat',
      'Marszałkowska',
      'Chmielna',
      'Złota',
    ],
  },
  {
    city: 'Krakow',
    country: 'Poland',
    countryCode: 'PL',
    regionName: 'Lesser Poland Voivodeship',
    regionCode: 'MA',
    regionCodeFull: 'PL-MA',
    lat: 50.0755,
    lon: 19.9445,
    postcode: '31-001',
    streetNames: ['Floriańska', 'Grodzka', 'Kanonicza', 'Sławkowska', 'Długa'],
  },
  {
    city: 'Gdansk',
    country: 'Poland',
    countryCode: 'PL',
    regionName: 'Pomeranian Voivodeship',
    regionCode: 'PM',
    regionCodeFull: 'PL-PM',
    lat: 54.352,
    lon: 18.6466,
    postcode: '80-001',
    streetNames: ['Długi Targ', 'Długa', 'Mariacka', 'Piwna', 'Chlebnicka'],
  },
  {
    city: 'Wroclaw',
    country: 'Poland',
    countryCode: 'PL',
    regionName: 'Lower Silesian Voivodeship',
    regionCode: 'DS',
    regionCodeFull: 'PL-DS',
    lat: 51.1079,
    lon: 17.0385,
    postcode: '50-001',
    streetNames: [
      'Rynek',
      'Świdnicka',
      'Oławska',
      'Kazimierza Wielkiego',
      'Ruska',
    ],
  },

  // Czech Republic
  {
    city: 'Prague',
    country: 'Czech Republic',
    countryCode: 'CZ',
    regionName: 'Prague',
    regionCode: 'PR',
    regionCodeFull: 'CZ-PR',
    lat: 50.0755,
    lon: 14.4378,
    postcode: '110 00',
    streetNames: [
      'Václavské náměstí',
      'Karlova',
      'Celetná',
      'Pařížská',
      'Národní',
    ],
  },
  {
    city: 'Brno',
    country: 'Czech Republic',
    countryCode: 'CZ',
    regionName: 'South Moravian Region',
    regionCode: 'JM',
    regionCodeFull: 'CZ-JM',
    lat: 49.1951,
    lon: 16.6068,
    postcode: '602 00',
    streetNames: ['Masarykova', 'Zelný trh', 'Joštova', 'Rašínova', 'Kobližná'],
  },

  // Austria
  {
    city: 'Vienna',
    country: 'Austria',
    countryCode: 'AT',
    regionName: 'Vienna',
    regionCode: 'W',
    regionCodeFull: 'AT-W',
    lat: 48.2082,
    lon: 16.3738,
    postcode: '1010',
    streetNames: [
      'Graben',
      'Kärntner Straße',
      'Stephansplatz',
      'Mariahilfer Straße',
      'Kohlmarkt',
    ],
  },
  {
    city: 'Salzburg',
    country: 'Austria',
    countryCode: 'AT',
    regionName: 'Salzburg',
    regionCode: 'S',
    regionCodeFull: 'AT-S',
    lat: 47.8095,
    lon: 13.055,
    postcode: '5020',
    streetNames: [
      'Getreidegasse',
      'Linzer Gasse',
      'Judengasse',
      'Steingasse',
      'Kaigasse',
    ],
  },

  // Switzerland
  {
    city: 'Zurich',
    country: 'Switzerland',
    countryCode: 'CH',
    regionName: 'Zurich',
    regionCode: 'ZH',
    regionCodeFull: 'CH-ZH',
    lat: 47.3769,
    lon: 8.5417,
    postcode: '8001',
    streetNames: [
      'Bahnhofstrasse',
      'Niederdorf',
      'Langstrasse',
      'Limmatquai',
      'Rennweg',
    ],
  },
  {
    city: 'Geneva',
    country: 'Switzerland',
    countryCode: 'CH',
    regionName: 'Geneva',
    regionCode: 'GE',
    regionCodeFull: 'CH-GE',
    lat: 46.2044,
    lon: 6.1432,
    postcode: '1201',
    streetNames: [
      'Rue du Rhône',
      "Rue de la Croix-d'Or",
      'Rue du Marché',
      'Rue de Rive',
      'Rue de la Cité',
    ],
  },

  // Belgium
  {
    city: 'Brussels',
    country: 'Belgium',
    countryCode: 'BE',
    regionName: 'Brussels-Capital Region',
    regionCode: 'BRU',
    regionCodeFull: 'BE-BRU',
    lat: 50.8503,
    lon: 4.3517,
    postcode: '1000',
    streetNames: [
      'Rue Neuve',
      'Boulevard Anspach',
      'Rue des Bouchers',
      'Grand Place',
      'Rue de la Bourse',
    ],
  },
  {
    city: 'Antwerp',
    country: 'Belgium',
    countryCode: 'BE',
    regionName: 'Flanders',
    regionCode: 'VLG',
    regionCodeFull: 'BE-VLG',
    lat: 51.2194,
    lon: 4.4025,
    postcode: '2000',
    streetNames: [
      'Meir',
      'Grote Markt',
      'Kloosterstraat',
      'Nationalestraat',
      'Kammenstraat',
    ],
  },

  // Portugal
  {
    city: 'Lisbon',
    country: 'Portugal',
    countryCode: 'PT',
    regionName: 'Lisbon',
    regionCode: 'LIS',
    regionCodeFull: 'PT-LIS',
    lat: 38.7223,
    lon: -9.1393,
    postcode: '1100-001',
    streetNames: [
      'Rua Augusta',
      'Rua de Santa Justa',
      'Rua da Prata',
      'Rua dos Sapateiros',
      'Rua do Comércio',
    ],
  },
  {
    city: 'Porto',
    country: 'Portugal',
    countryCode: 'PT',
    regionName: 'North',
    regionCode: 'N',
    regionCodeFull: 'PT-N',
    lat: 41.1579,
    lon: -8.6291,
    postcode: '4000-001',
    streetNames: [
      'Rua de Santa Catarina',
      'Rua das Flores',
      'Rua de Cedofeita',
      'Rua de Miguel Bombarda',
      'Rua de Passos Manuel',
    ],
  },

  // Sweden
  {
    city: 'Stockholm',
    country: 'Sweden',
    countryCode: 'SE',
    regionName: 'Stockholm County',
    regionCode: 'AB',
    regionCodeFull: 'SE-AB',
    lat: 59.3293,
    lon: 18.0686,
    postcode: '111 22',
    streetNames: [
      'Drottninggatan',
      'Västerlånggatan',
      'Stortorget',
      'Stureplan',
      'Biblioteksgatan',
    ],
  },
  {
    city: 'Gothenburg',
    country: 'Sweden',
    countryCode: 'SE',
    regionName: 'Västra Götaland County',
    regionCode: 'O',
    regionCodeFull: 'SE-O',
    lat: 57.7089,
    lon: 11.9746,
    postcode: '411 01',
    streetNames: [
      'Kungsgatan',
      'Avenyn',
      'Vallgatan',
      'Östra Hamngatan',
      'Kungsportsavenyn',
    ],
  },

  // Norway
  {
    city: 'Oslo',
    country: 'Norway',
    countryCode: 'NO',
    regionName: 'Oslo',
    regionCode: 'OS',
    regionCodeFull: 'NO-OS',
    lat: 59.9139,
    lon: 10.7522,
    postcode: '0150',
    streetNames: [
      'Karl Johans gate',
      'Stortingsgata',
      'Aker Brygge',
      'Grünerløkka',
      'Frogner',
    ],
  },

  // Denmark
  {
    city: 'Copenhagen',
    country: 'Denmark',
    countryCode: 'DK',
    regionName: 'Capital Region',
    regionCode: 'H',
    regionCodeFull: 'DK-H',
    lat: 55.6761,
    lon: 12.5683,
    postcode: '1050',
    streetNames: [
      'Strøget',
      'Nyhavn',
      'Kongens Nytorv',
      'Amagertorv',
      'Nørreport',
    ],
  },

  // Finland
  {
    city: 'Helsinki',
    country: 'Finland',
    countryCode: 'FI',
    regionName: 'Uusimaa',
    regionCode: 'U',
    regionCodeFull: 'FI-U',
    lat: 60.1699,
    lon: 24.9384,
    postcode: '00100',
    streetNames: [
      'Esplanadi',
      'Mannerheimintie',
      'Aleksanterinkatu',
      'Unioninkatu',
      'Kauppatori',
    ],
  },

  // Ireland
  {
    city: 'Dublin',
    country: 'Ireland',
    countryCode: 'IE',
    regionName: 'Leinster',
    regionCode: 'L',
    regionCodeFull: 'IE-L',
    lat: 53.3498,
    lon: -6.2603,
    postcode: 'D01',
    streetNames: [
      'Grafton Street',
      "O'Connell Street",
      'Henry Street',
      'Temple Bar',
      'Dame Street',
    ],
  },

  // Hungary
  {
    city: 'Budapest',
    country: 'Hungary',
    countryCode: 'HU',
    regionName: 'Budapest',
    regionCode: 'BU',
    regionCodeFull: 'HU-BU',
    lat: 47.4979,
    lon: 19.0402,
    postcode: '1051',
    streetNames: [
      'Váci utca',
      'Andrássy út',
      'Kossuth Lajos utca',
      'Rákóczi út',
      'Király utca',
    ],
  },

  // Romania
  {
    city: 'Bucharest',
    country: 'Romania',
    countryCode: 'RO',
    regionName: 'Bucharest',
    regionCode: 'B',
    regionCodeFull: 'RO-B',
    lat: 44.4268,
    lon: 26.1025,
    postcode: '010001',
    streetNames: [
      'Calea Victoriei',
      'Strada Lipscani',
      'Bulevardul Magheru',
      'Strada Franceză',
      'Piața Universității',
    ],
  },

  // Bulgaria
  {
    city: 'Sofia',
    country: 'Bulgaria',
    countryCode: 'BG',
    regionName: 'Sofia City',
    regionCode: 'SF',
    regionCodeFull: 'BG-SF',
    lat: 42.6977,
    lon: 23.3219,
    postcode: '1000',
    streetNames: [
      'Vitosha Boulevard',
      'Graf Ignatiev Street',
      'Rakovski Street',
      'Tsar Osvoboditel Boulevard',
      'Maria Luiza Boulevard',
    ],
  },

  // Croatia
  {
    city: 'Zagreb',
    country: 'Croatia',
    countryCode: 'HR',
    regionName: 'City of Zagreb',
    regionCode: 'ZG',
    regionCodeFull: 'HR-ZG',
    lat: 45.815,
    lon: 15.9819,
    postcode: '10000',
    streetNames: ['Ilica', 'Tkalčićeva', 'Radićeva', 'Cvjetni trg', 'Dolac'],
  },

  // Slovenia
  {
    city: 'Ljubljana',
    country: 'Slovenia',
    countryCode: 'SI',
    regionName: 'Central Slovenia',
    regionCode: 'LJ',
    regionCodeFull: 'SI-LJ',
    lat: 46.0569,
    lon: 14.5058,
    postcode: '1000',
    streetNames: [
      'Prešernova cesta',
      'Mestni trg',
      'Stritarjeva ulica',
      'Čopova ulica',
      'Trubarjeva cesta',
    ],
  },

  // Slovakia
  {
    city: 'Bratislava',
    country: 'Slovakia',
    countryCode: 'SK',
    regionName: 'Bratislava Region',
    regionCode: 'BL',
    regionCodeFull: 'SK-BL',
    lat: 48.1486,
    lon: 17.1077,
    postcode: '811 01',
    streetNames: [
      'Hlavná ulica',
      'Michalská ulica',
      'Ventúrska ulica',
      'Obchodná ulica',
      'Námestie SNP',
    ],
  },

  // Lithuania
  {
    city: 'Vilnius',
    country: 'Lithuania',
    countryCode: 'LT',
    regionName: 'Vilnius County',
    regionCode: 'VL',
    regionCodeFull: 'LT-VL',
    lat: 54.6872,
    lon: 25.2797,
    postcode: '01103',
    streetNames: [
      'Gedimino prospektas',
      'Pilies gatvė',
      'Vilniaus gatvė',
      'Didžioji gatvė',
      'Aušros Vartų gatvė',
    ],
  },

  // Latvia
  {
    city: 'Riga',
    country: 'Latvia',
    countryCode: 'LV',
    regionName: 'Riga',
    regionCode: 'RIX',
    regionCodeFull: 'LV-RIX',
    lat: 56.9496,
    lon: 24.1052,
    postcode: 'LV-1050',
    streetNames: [
      'Brīvības iela',
      'Kalku iela',
      'Valnu iela',
      'Miera iela',
      'Elizabetes iela',
    ],
  },

  // Estonia
  {
    city: 'Tallinn',
    country: 'Estonia',
    countryCode: 'EE',
    regionName: 'Harju County',
    regionCode: 'HAR',
    regionCodeFull: 'EE-HAR',
    lat: 59.437,
    lon: 24.7536,
    postcode: '10111',
    streetNames: [
      'Viru tänav',
      'Pikk tänav',
      'Lai tänav',
      'Vene tänav',
      'Müürivahe tänav',
    ],
  },
];

const stylesPool = [
  'blackwork',
  'geometric',
  'realism',
  'portrait',
  'traditional',
  'watercolor',
  'tribal',
  'fine-line',
  'neo-traditional',
  'japanese',
  'biomechanical',
  'dotwork',
  'minimalist',
  'abstract',
  'ornamental',
  'sketch',
  'surrealism',
  'new school',
  'old school',
  'trash polka',
];

function pick<T>(arr: T[]): T {
  return arr[Math.floor(Math.random() * arr.length)];
}

function pickStyles(): string[] {
  const count = 1 + Math.floor(Math.random() * 3);
  const shuffled = [...stylesPool].sort(() => Math.random() - 0.5);
  return shuffled.slice(0, count);
}

function randomLatLon(location: (typeof europeanLocations)[0]): {
  lat: number;
  lon: number;
} {
  // Add some random variation to coordinates within the city
  const latVariation = 0.01; // ~1km
  const lonVariation = 0.01; // ~1km
  return {
    lat: location.lat + (Math.random() - 0.5) * latVariation,
    lon: location.lon + (Math.random() - 0.5) * lonVariation,
  };
}

export function makeRandomUsers(count: number): SeedUser[] {
  const users: SeedUser[] = [];
  for (let i = 0; i < count; i++) {
    const name = names[i % names.length];
    const nickname = nicknames[i % nicknames.length];
    const location = pick(europeanLocations);
    const streetName = pick(location.streetNames);
    const addressNumber = Math.floor(Math.random() * 200) + 1;
    const address = `${streetName} ${addressNumber}`;
    const styles = pickStyles();
    const emailLocal = nickname.replace(/\./g, '_');
    const email = `${emailLocal}@example.com`;
    const googleId = `${nickname}-google-id`;
    const avatar = `https://i.pravatar.cc/300?img=${(i % 70) + 1}`;
    const instagram = `https://instagram.com/${nickname}`;
    const coords = randomLatLon(location);

    // Independent flags (not mutually exclusive)
    const doesBlackAndGray =
      Math.random() < (styles.includes('blackwork') ? 0.8 : 0.35);
    const doesColor = Math.random() < 0.7; // can be true even if black & gray is true

    users.push({
      id: `seed-user-${i + 1}`,
      email,
      googleId,
      name,
      avatar,
      role: 'USER',
      artist: {
        nickname,
        city: location.city,
        country: location.country,
        countryCode: location.countryCode,
        address,
        description: `Professional tattoo artist in ${location.city}, ${location.country}. Specializing in ${styles.join(', ')}.`,
        styles,
        instagram,
        avatar,
        beginner: Math.random() < 0.2,
        blackAndGray: doesBlackAndGray,
        color: doesColor,
        lat: coords.lat,
        lon: coords.lon,
        // New location fields
        regionName: location.regionName,
        regionCode: location.regionCode,
        regionCodeFull: location.regionCodeFull,
        postcode: location.postcode,
        streetName: streetName,
        addressNumber: addressNumber.toString(),
        routableLat: coords.lat,
        routableLon: coords.lon,
        geoRaw: {
          feature_type: 'address',
          full_address: `${address}, ${location.city}, ${location.country}`,
          coordinates: coords,
        },
      },
    });
  }
  return users;
}

export const defaultSeedUsers: SeedUser[] = [];
